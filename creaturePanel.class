import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

public class creaturePanel extends JPanel {
    private final int WIDTH = 750;
    private final int HEIGHT = 500;
    private final int DELAY = 750;
    private final int IMAGE_SIZE = 50;
    private int mouseX;
    private int mouseY;
    private int points;
    private int limit = 50;
    private ImageIcon image;
    private Timer timer;
    private int x;
    private int y;
    private int moveX;
    private int moveY;
    JLabel label;
    Random randX;
    Random randY;

    public creaturePanel() {
        this.label = new JLabel("Points: " + this.points);
        this.randX = new Random();
        this.randY = new Random();
        this.add(this.label);
        this.addMouseListener(new creaturePanel.CoordinatesListener((creaturePanel.CoordinatesListener)null));
        this.timer = new Timer(750, new creaturePanel.creatureListener((creaturePanel.creatureListener)null));
        this.image = new ImageIcon("SMACKLEPEN.gif");
        this.x = 0;
        this.y = 40;
        this.moveX = this.moveY = 3;
        this.setPreferredSize(new Dimension(750, 500));
        this.setBackground(Color.black);
        this.timer.start();
    }

    public void paintComponent(Graphics page) {
        super.paintComponent(page);
        this.image.paintIcon(this, page, this.x, this.y);
    }

    public int randXPosition() {
        this.moveX = this.randX.nextInt(750);
        return this.moveX;
    }

    public int randYPositon() {
        this.moveY = this.randY.nextInt(500);
        return this.moveY;
    }

    private class CoordinatesListener implements MouseListener {
        private CoordinatesListener() {
        }

        public void mousePressed(MouseEvent event) {
            creaturePanel.this.mouseX = event.getX();
            creaturePanel.this.mouseY = event.getY();
            creaturePanel.this.label.setBackground(Color.cyan);
            if (creaturePanel.this.mouseX - creaturePanel.this.limit < creaturePanel.this.x && creaturePanel.this.mouseX + creaturePanel.this.limit > creaturePanel.this.x && creaturePanel.this.mouseY - creaturePanel.this.limit < creaturePanel.this.y && creaturePanel.this.mouseY + creaturePanel.this.limit > creaturePanel.this.y) {
                creaturePanel.this.points = creaturePanel.this.points + 1;
                creaturePanel.this.label.setText("You Clicked: X: " + creaturePanel.this.mouseX + " Y: " + creaturePanel.this.mouseY);
            }

        }

        public void mouseClicked(MouseEvent event) {
        }

        public void mouseReleased(MouseEvent event) {
        }

        public void mouseEntered(MouseEvent event) {
        }

        public void mouseExited(MouseEvent event) {
        }
    }

    private class creatureListener implements ActionListener {
        private creatureListener() {
        }

        public void actionPerformed(ActionEvent event) {
            creaturePanel.this.label.setBackground(Color.cyan);
            creaturePanel.this.label.setText("Points: " + creaturePanel.this.points + " | x: " + creaturePanel.this.x + " | y: " + creaturePanel.this.y);
            creaturePanel.this.x = creaturePanel.this.randXPosition();
            creaturePanel.this.y = creaturePanel.this.randYPositon();
            if (creaturePanel.this.x <= 0 || creaturePanel.this.x >= 700) {
                creaturePanel.this.moveX = creaturePanel.this.moveX * -1;
            }

            if (creaturePanel.this.y <= 0 || creaturePanel.this.y >= 450) {
                creaturePanel.this.moveY = creaturePanel.this.moveY * -1;
            }

            creaturePanel.this.repaint();
        }
    }
}
